syntax = "proto3";

option java_package = "com.bluedragonmc.api.grpc";

import "google/protobuf/empty.proto";
import "common/common_types.proto";

// A player holder is a proxy or game server which can hold and route players to various backend servers or game instances.
// Both the Velocity proxy and the game servers should create a player_holder service.
service PlayerHolder {
  rpc SendPlayer(SendPlayerRequest) returns (SendPlayerResponse);
  rpc GetPlayers(google.protobuf.Empty) returns (GetPlayersResponse);
}

message SendPlayerRequest {
  string player_uuid = 1;
  string server_name = 2;
  string instance_id = 3;
  string game_server_ip = 4;
  uint32 game_server_port = 5;
}

message SendPlayerResponse {
  enum SuccessFlags {
    SET_SERVER = 0;
    SET_INSTANCE = 1;
  }
  bool player_found = 1;
  repeated SuccessFlags successes = 2;
}

message GetPlayersResponse {

  message ConnectedPlayer {
    string username = 1;
    string uuid = 2;
    string server_name = 3;
  }

  repeated ConnectedPlayer players = 1;
}
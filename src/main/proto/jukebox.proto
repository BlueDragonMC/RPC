syntax = "proto3";

option java_package = "com.bluedragonmc.api.grpc";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "common/common_types.proto";

service Jukebox {
  // This service runs on Puffin, but all the logic happens on the game servers. Puffin essentially acts as a cache for song info when players move between game servers.

  // When a player logs in, the game server requests the song queue from Puffin.
  // When a player logs out, the game server sends the updated song queue to Puffin.
  // When a player wants to change their current song, the game server will fetch the song queue, update it, and send it to Puffin.
  // When a song ends, the game server will remove it from the queue and send the updated queue to Puffin.

  rpc GetSongQueue(GetSongQueueRequest) returns (PlayerSongQueue);
  rpc SetSongQueue(SetSongQueueRequest) returns (google.protobuf.Empty);
}

message GetSongQueueRequest {
  string player_uuid = 1;
}

message PlayerSongQueue {
  // When combined, started_playing_at and starting_tick tell you what point to resume the song at.
  // When you need to start the song, take the starting tick and add the number of ticks that have passed since started_playing_at. Then, play the song starting from that tick.
  // When you need to save the song's current time, set started_playing_at to the current timestamp and set starting_tick to the current tick.
  google.protobuf.Timestamp started_playing_at = 1;
  bool is_playing = 2;
  int32 starting_tick = 3;
  repeated PlayerSongInfo songs = 4;
}

message SetSongQueueRequest {
  string player_uuid = 1;
  PlayerSongQueue queue = 2;
}

message PlayerSongInfo {
  string song_name = 1;
  int32 song_length_ticks = 2;
  double tempo = 3;
}

message PlaySongRequest {
  string player_uuid = 1;
  /* An NBS file name without its extension relative to the game server's current working directory */
  string song_name = 2;
  int32 start_time_ticks = 3;
}
